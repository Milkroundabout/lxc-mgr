---
- hosts: localhost
  name: provision a new lxc host
  sudo: True

  vars:
    con_prefix: con-smr
    con_name: ansible
    fq_con_name: '{{ con_prefix }}-{{ con_name }}'
    backing_store: btrfs
    lxc_base_dir: '/var/lib/lxc/{{ fq_con_name }}'
    con_config_file: '{{ lxc_base_dir }}/config'
    username: '{{ ansible_user_id }}'
    hostname_file: '{{ lxc_base_dir }}/rootfs/etc/hostname'


  tasks:
    - name: clone lxc from base
      command: >
        lxc-clone con-smr-base2
        -n {{ fq_con_name }}
        -s -B{{ backing_store }}
        creates={{ con_config_file }}

    - name: register the new host as a target
      add_host: >
        name=container
        ansible_ssh_host={{ fq_con_name }}.local.lxc
        ansible_ssh-user={{ username }}


    - name: start the container up
      command: lxc-start -n {{ fq_con_name }} -d

    - name: wait for ssh server to be running
      wait_for: host={{ fq_con_name}}.local.lxc port=22

# these tasks will run in the new container

- name: setup new host
  hosts: container
  sudo: ask
  vars:
    git_config_dir: ~{{ ansible_ssh_user }}/.config/git
    user_gitignore: "{{ git_config_dir}}/ignore"

  tasks:
    - name: set username correctly for git config
      shell: >
        git config --global user.name '{{ ansible_ssh_user }}'  &&
        git config --global user.email '{{ ansible_ssh_user }}@milkroundabout.com'
        creates=~/.gitconfig

    - name: make git config directory
      file: dest={{ git_config_dir }} state=directory

    - name: copy global gitignore
      copy: src={{ user_gitignore }} dest={{ user_gitignore }}


    - name: set hostname
      sudo: true
      replace: >
        dest=/etc/hostname
        regexp='^.*$'
        replace='{{ con_name }}'

    - name: reboot
      sudo: true
      shell: shutdown -r now
